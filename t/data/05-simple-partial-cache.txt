# Start git daemon and ngitcached ...
start_ngitcached --port 10231 --test
out0: Initialized empty Git repository in %TEMPDIR%/cache/
out0: ngitcached listening on port 10231

cd /
git daemon --reuseaddr --export-all --port=10232 %TEMPDIR% &

# Make a repo with a (1MB) commit
git init %TEMPDIR%/repo1
cd %TEMPDIR%/repo1
dd if=/dev/urandom of=file bs=1024 count=1024 2>/dev/null 1>&2
git add file
git commit -m 'commit 1'
COMMIT1=$(git rev-parse HEAD)

# Clone it via proxy
cd %TEMPDIR%
( git clone --progress --verbose git://127.0.0.1:10231/?remote=127.0.0.1:10232%TEMPDIR%/repo1 repo2 >repo2.log 2>&1 )
cd repo2
[ $(git rev-parse HEAD) = $COMMIT1 ]
cd ..

# Make another 1MB commit on repo1
cd %TEMPDIR%/repo1
dd if=/dev/urandom of=file bs=1024 count=1024 2>/dev/null 1>&2
git add file
git commit -m 'commit 2'
COMMIT2=$(git rev-parse HEAD)
cd ..

# Clone again
( git clone --progress --verbose git://127.0.0.1:10231/?remote=127.0.0.1:10232%TEMPDIR%/repo1 repo3 >repo3.log 2>&1 )
cd repo3
[ $(git rev-parse HEAD) = $COMMIT2 ]
cd ..

# First clone should transfer 1MB from server, 1MB from proxy
egrep '^remote: 127\.0\.0\.1: Receiving objects:.*1\.00 MiB, done' repo2.log
egrep '^Receiving objects:.*1\.00 MiB, done' repo2.log

# Second clone should transfer 1MB from server, 2MB from proxy
egrep '^remote: 127\.0\.0\.1: Receiving objects:.*1\.00 MiB, done' repo3.log
egrep '^Receiving objects:.*2\.00 MiB, done' repo3.log

stop_ngitcached
out0: Exiting gracefully due to signal.
